[include mainsail.cfg]
[gcode_macro START_PRINT]
#Configure prime line - From Klipper-Adaptive-Meshing-Purging https://github.com/kyleisah/Klipper-Adaptive-Meshing-Purging
variable_adaptive_enable: True     # Change to False if you'd like the purge to be in the same spot every print
variable_z_height: 0.4              # Height above the bed to purge
variable_purge_amount: 25           # Amount of filament in millimeters to purge
variable_line_length: 50            # Overall desired length of purge line in millimeters, around 1/5th of X axis length is a good starting value
variable_flow_rate: 12              # Desired flow rate in mm3/s (Around 12 for standard flow hotends, around 24 for high flow hotends)
variable_x_default: 10              # Default X location to purge. If adaptive_enable is True, this is overwritten
variable_y_default: 10              # Default Y location to purge. If adaptive_enable is True, this is overwritten
variable_distance_to_object_y: 10   # Y distance in millimeters away from the print area for purging. Must be less than or equal to y_default if adaptive_enable is False

#Configure Bed Leveling
variable_calibrate_bed_mesh: False     # If True create a new mesh False load default mesh

#### ECHO/DEBUG
variable_display_parameters: True   # Display macro parameters in the console, useful for debugging the SETUP_LINE_PURGE call, or more verbosity.

gcode:
      #Get Printer built volume dimensions
      {% set X_MAX = printer.toolhead.axis_maximum.x|default(100)|float %}
      {% set Y_MAX = printer.toolhead.axis_maximum.y|default(100)|float %}
      {% set Z_MAX = printer.toolhead.axis_maximum.z|default(100)|float %}

      #Get Nozzle diameter and filament width for conditioning
      {% set NOZZLE = printer.extruder.nozzle_diameter|default(0.4)|float %}
      {% set FILADIA = printer.extruder.filament_diameter|default(1.75)|float %}

      #Set Start coordinates of priming lines
      {% set X_START = 10.0|default(10.0)|float %}
      {% set Y_START = 20.0|default(20.0)|float %}

      #Get Bed and Extruder temperature from Slicer GCode
      {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
      {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
      {% if display_parameters == True %}
        { action_respond_info("Bed Temperature        : %i" % (params.BED_TEMP | int)) }
        { action_respond_info("Extruder Temperature   : %i" % (params.EXTRUDER_TEMP | int)) }
      {% endif %}
      #Preheat nozzle and bed
      M104 S{EXTRUDER_TEMP} T0                        
      M140 S{BED_TEMP}                                

      #Home
      G28
      Z_TILT_ADJUST
      G28 Z
      #Bed Leveling
      BED_MESH_CLEAR
      {% if calibrate_bed_mesh == True %}
       BED_MESH_CALIBRATE PROFILE=default # Create a new bed mesh
       BED_MESH_PROFILE LOAD=default # Load stored bed mesh
      {% else %}
       BED_MESH_PROFILE LOAD=default # Load stored bed mesh
      {% endif %}
      
      {% if display_parameters == True %}
       BED_MESH_OUTPUT
      {% endif %}

      #Move up to clean bed
      G1 Y{Y_MAX - 20} Z{Z_MAX/4.0} F6000                

      #Heat nozzle and bed
      M190 S{BED_TEMP}                               
      M109 S{EXTRUDER_TEMP} T0                       

      #Prime Line
      {% if display_parameters == True %}
        { action_respond_info("adaptive_enable : %d" % (adaptive_enable))  }
        { action_respond_info("z_height        : %f" % (z_height))  }
        { action_respond_info("purge_amount    : %f" % (purge_amount))  }
        { action_respond_info("line_length     : %f" % (line_length))  }
        { action_respond_info("flow_rate       : %f" % (flow_rate))  }
        { action_respond_info("x_default       : %f" % (x_default))  }
        { action_respond_info("y_default       : %f" % (y_default))  }
        { action_respond_info("distance_to_object_y : %f" % (distance_to_object_y))  }
      {% endif %}

      {% if adaptive_enable == True %}
          {% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
          {% set x_origin = (all_points | map(attribute=0) | min | default(x_default)) %}
          {% set y_origin = (all_points | map(attribute=1) | min | default(y_default)) %}
          {% set x_origin = ([x_origin, 0] | max) %}
          {% set y_origin = ([y_origin, 0] | max) %}
      {% else %}
          {% set x_origin = x_default | float %}
          {% set y_origin = y_default | float %}
      {% endif %}
      {% set nozzle_dia = printer.configfile.config.extruder.nozzle_diameter | float %}
      {% set cross_section = nozzle_dia * z_height | float %}
      {% set purge_move_speed = (cross_section * flow_rate) * 60 | float %}
      {% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
      
      {% if display_parameters == True %}
        { action_respond_info("z_height          : %f" % (z_height))  }
        { action_respond_info("nozzle_dia        : %f" % (nozzle_dia))  }
        { action_respond_info("cross_section     : %f" % (cross_section))  }
        { action_respond_info("purge_move_speed  : %f" % (purge_move_speed))  }
        { action_respond_info("travel_speed      : %f" % (travel_speed))  }
        { action_respond_info("x_origin          : %f" % (x_origin))  }
        { action_respond_info("y_origin          : %f" % (y_origin))  }
      {% endif %}
      
      G92 E0                                                                              # Reset extruder
      G0 F{travel_speed}                                                                  # Set travel speed
      G90                                                                                 # Absolute positioning
      G0 X{x_origin} Y{y_origin - distance_to_object_y}                                   # Move to purge position
      G0 Z{z_height}                                                                      # Move to purge Z height
      M83                                                                                 # Relative extrusion mode
      G1 X{x_origin + line_length} E{purge_amount} F{purge_move_speed}                    # Purge line
      G1 E-.5 F2100                                                                       # Retract
      G92 E0                                                                              # Reset extruder distance
      M82                                                                                 # Absolute extrusion mode
      G0 Z{z_height * 2} F{travel_speed}                                                  # Z hop
      
[gcode_macro SETUP_START_PRINT]
gcode:
    SET_GCODE_VARIABLE MACRO=START_PRINT  VARIABLE=calibrate_bed_mesh   VALUE={params.CALIBRATE_BED_MESH|default(True)|int}
    SET_GCODE_VARIABLE MACRO=START_PRINT  VARIABLE=display_parameters   VALUE={params.DISPLAY_PARAMETERS|default(True)|int}
    SET_GCODE_VARIABLE MACRO=START_PRINT  VARIABLE=adaptive_enable   VALUE={params.ADAPTIVE_ENABLE|default(True)|int}
    SET_GCODE_VARIABLE MACRO=START_PRINT  VARIABLE=z_height      VALUE={params.Z_HEIGHT|default(0.4)|float}
    SET_GCODE_VARIABLE MACRO=START_PRINT  VARIABLE=purge_amount  VALUE={params.PURGE_AMOUNT|default(40)|float}
    SET_GCODE_VARIABLE MACRO=START_PRINT  VARIABLE=line_length  VALUE={params.LINE_LENGTH|default(50)|float}
    SET_GCODE_VARIABLE MACRO=START_PRINT  VARIABLE=flow_rate     VALUE={params.FLOW_RATE|default(12)|float}
    SET_GCODE_VARIABLE MACRO=START_PRINT  VARIABLE=x_default     VALUE={params.X_DEFAULT|default(10)|float}
    SET_GCODE_VARIABLE MACRO=START_PRINT  VARIABLE=y_default     VALUE={params.Y_DEFAULT|default(10)|float}
    SET_GCODE_VARIABLE MACRO=START_PRINT  VARIABLE=distance_to_object_y     VALUE={params.DISTANCE_TO_OBJECT_Y|default(10)|float}    

#// END_PRINT
[gcode_macro END_PRINT]
gcode:
        #Get Printer built volume dimensions
        {% set X_MAX = printer.toolhead.axis_maximum.x|default(100)|float %}
        {% set Y_MAX = printer.toolhead.axis_maximum.y|default(100)|float %}

        #Fix-up extruder
        G91                                            
        G1 E-2 F500                                    
        G1 E-1.5 Z0.2 F500                        
        G1 X5 Y5 F6000                               
        G1 Z5                                     
        G90                                        

        #Present print
        G1 Z{printer.toolhead.position.z + 10} F600
        G1 X{X_MAX / 2} Y{Y_MAX} F6000
        M106 S0                                      
        M104 S0                                       
        M140 S0                                 

        #Disable Steppers
        M84 X Y E                                    
##################################################################################################################################
##################################################################################################################################

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    {% if printer.pause_resume.is_paused == False %}
      PAUSE
    {% endif %}
	G90
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    CANCEL_PRINT_BASE
    M84

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_retract_extrude: 10.0 
variable_extrude_extrude: 12.0
gcode:
    {% if printer.virtual_sdcard.is_active == True %}
      {% if printer.pause_resume.is_paused == False %}
        ##### read E from pause macro #####
        {% set E = printer["gcode_macro PAUSE"].retract_extrude|float %}
        ##### set park positon for x and y #####
        # default is your max posion from your printer.cfg
        {% set x_park = printer.toolhead.axis_minimum.x|float + 5.0 %}
        {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
        ##### calculate save lift position #####
        {% set max_z = printer.toolhead.axis_maximum.z|float %}
        {% set act_z = printer.toolhead.position.z|float %}
        {% if act_z < (max_z - 2.0) %}
          {% set z_safe = 2.0 %}
        {% else %}
          {% set z_safe = max_z - act_z %}
        {% endif %}
        ##### end of definitions #####
        PAUSE_BASE
        G91
        {% if printer.extruder.can_extrude|lower == 'true' %}
          G1 E-{E} F2100
        {% else %}
          {action_respond_info("Extruder not hot enough")}
        {% endif %}
        {% if "xyz" in printer.toolhead.homed_axes %}
          G1 Z{z_safe} F900
          G90
          G1 X{x_park} Y{y_park} F6000
        {% else %}
          {action_respond_info("Printer not homed")}
        {% endif %} 
      {% endif %}
    {% endif %}
    
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    {% if printer.pause_resume.is_paused %}
      ##### read E from pause macro #####
      {% set E = printer["gcode_macro PAUSE"].extrude_extrude|float %}
      #### get VELOCITY parameter if specified ####
      {% if 'VELOCITY' in params|upper %}
        {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
      {%else %}
        {% set get_params = "" %}
      {% endif %}
      ##### end of definitions #####
      {% if printer.extruder.can_extrude|lower == 'true' %}
        G91
        G1 E{E} F2100
      {% else %}
        {action_respond_info("Extruder not hot enough")}
      {% endif %}  
      RESUME_BASE {get_params}
    {% endif %}

[gcode_macro LOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E30 F300                    ; load
   G1 E15 F150                    ; prime nozzle with filament
   M82                            ; set extruder to absolute
    
[gcode_macro UNLOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E10 F300                    ; extrude a little to soften tip
   G1 E-40 F1800                  ; retract some, but not too much or it will jam
   M82                            ; set extruder to absolute

[gcode_macro OFFSET_Z]
gcode:PROBE_CALIBRATE

[gcode_macro ALL]
gcode:G28 
  Z_TILT_ADJUST


[gcode_macro PID_EXTRUDER]
gcode:
    {% set T = params.T|default(230)|int %}
  PID_CALIBRATE HEATER=extruder TARGET={T}
  SAVE_CONFIG


[gcode_macro PID_BED]
gcode:
    {% set T = params.T|default(60)|int %}
  PID_CALIBRATE HEATER=heater_bed TARGET={T}
  SAVE_CONFIG


[gcode_macro PID_ALL]
gcode:
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(245)|int %}
    {% set  BED_TEMP = params.BED_TEMP|default(55)|int %}
  PID_CALIBRATE HEATER=extruder TARGET={EXTRUDER_TEMP}
  PID_CALIBRATE HEATER=heater_bed TARGET={BED_TEMP}
  SAVE_CONFIG

[gcode_macro SHUTDOWN]
gcode:
  {action_call_remote_method("shutdown_machine")}

[gcode_macro REBOOT]
gcode:
  {action_call_remote_method("reboot_machine")}
